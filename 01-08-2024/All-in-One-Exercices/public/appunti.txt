import React, { useState } from "react";

const ContactForm = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    message: "",
  });
  const [errors, setErrors] = useState({});
  const [successMessage, setSuccessMessage] = useState("");

  const validate = () => {
    let tempErrors = {};
    if (!formData.name) tempErrors.name = "Name is required";
    if (!formData.email) tempErrors.email = "Email is required";
    else if (!/\S+@\S+\.\S+/.test(formData.email))
      tempErrors.email = "Email address is invalid";
    if (!formData.message) tempErrors.message = "Message is required";

    setErrors(tempErrors);
    return Object.keys(tempErrors).length === 0;
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (validate()) {
      setSuccessMessage("Your message has been sent!");
      setFormData({ name: "", email: "", message: "" });
      setErrors({});
    }
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  return (
    <div className="min-h-screen bg-grey-900 flex items-center justify-center p-4">
      <form
        className="bg-white p-8 rounded-lg shadow-md w-full max-w-lg"
        onSubmit={handleSubmit}
      >
        <h2 className="text-2xl font-bold mb-6 text-grey-900">Contact Us</h2>
        {successMessage && (
          <p className="text-green-600 mb-4">{successMessage}</p>
        )}
        <div className="mb-4">
          <label htmlFor="name" className="block text-grey-900 mb-2">
            Name
          </label>
          <input
            type="text"
            id="name"
            name="name"
            value={formData.name}
            onChange={handleChange}
            className={`w-full p-3 border ${
              errors.name ? "border-red" : "border-grey-500"
            } rounded-lg`}
          />
          {errors.name && <p className="text-red mt-2">{errors.name}</p>}
        </div>
        <div className="mb-4">
          <label htmlFor="email" className="block text-grey-900 mb-2">
            Email
          </label>
          <input
            type="email"
            id="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            className={`w-full p-3 border ${
              errors.email ? "border-red" : "border-grey-500"
            } rounded-lg`}
          />
          {errors.email && <p className="text-red mt-2">{errors.email}</p>}
        </div>
        <div className="mb-4">
          <label htmlFor="message" className="block text-grey-900 mb-2">
            Message
          </label>
          <textarea
            id="message"
            name="message"
            value={formData.message}
            onChange={handleChange}
            className={`w-full p-3 border ${
              errors.message ? "border-red" : "border-grey-500"
            } rounded-lg`}
          />
          {errors.message && <p className="text-red mt-2">{errors.message}</p>}
        </div>
        <button
          type="submit"
          className="bg-green-600 text-white p-3 rounded-lg w-full hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-200"
        >
          Send Message
        </button>
      </form>
    </div>
  );
};

export default ContactForm;